package day02;

import java.util.Scanner;

public class next {

	public static void main(String[] args) {
		/*
		 *참조 타입은 메모리 저장이 아니라 주소 저장이다
		 *
		 *3개의 저장공간
		 
		 *스레드(스택)는 현재 돌아가는 것들이 스레드에 들어간다 
		 *-먼저 들어간게 제일 나중에 나온다
		 *-ex)main
		 *메소드 영역
		 *-클래스 영역으로 만든 클래스가 올라가는 곳 
		 *=저장공간이 아니다.
		 *왠지 도구모음공간인것 같다
		 *힙 영역
		 *메소드 영역에 있는 클래스에는 저장공간이 없기 때문에 힙에 복사해서 저장한다
		 *
		 *기본타입 변수는 스택에 저장 된다
		 *
		 *메소드 영역에는 클래스가 올라오고 힙에는 객체가 올라온다
		 *기본타입인 int age = 25;는 스택의 한 칸을 차지하고 25라는 메모리가 할당 된다
		 *String이라는 클래스는 메소드 영역에 들어간다
		 *String name = "강민석"일때 String는 메소드 영역에, name은 스택에 들어간다
		 *String name = "강민석"은 사실 String name = new String("강민석")이다
		 *그리고 힙에 객체를 생성하고 강민석을 넣고 스택에는 힙에 있는 name 주소가 들어간다.
		 *클래스에 String이 한 번 올라가면 그다음 사용할때부터는 안올라간다
		 *
		 *기본자료 형은 스택에 값이 바로 들어가고
		 *참조타입 변수의 값은 힙에 들어가고 스택에는 그 힙의 주소가 들어간다
		 *
		 *참조자료형은 주소가 같은가 다른가이기 때문에 같아도 다르다고 나올때가 있다
		 *스택 영역은 값을 직접 비교하기 때문에 ==, !=를 사용해도 문제가 없다.
		 *
		 *String 변수이름은 다르지만 내용이 같으면 같은 객체를 가리킨다
		 *new를 사용하면 위 내용처럼 되지 않고 무조건 새로운 객체를 생성했기 때문에 다르다고 나온다
		 *위 내용은 String만 해당하는 내용이다.ㄴ
		 *		 *
		 *
		 *
		 *
		 *
		 */
		
	}

}
