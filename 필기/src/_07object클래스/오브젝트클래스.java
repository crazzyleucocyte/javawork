package _07object클래스;

public class 오브젝트클래스 {
	/*
	 *String buffer 클래스
	 * 
	 *  java.lang 패키지에는 여러개의 클래스가 있는데
	 *  object
	 *  System
	 *  Class
	 *  String
	 *  StringByffer, String Builder
	 *  Math
	 *  Wrapper - 기본자료형(Byte, Integer, Boolean)들은 객체로 되어있지 않은데 이것 들을 
	 *             객체로 만들어서 사용할 수 있게 만드는 클래스(대문자 기본자료형)
	 * 
	 * 
	 */
	
	/*Object Class
	 * 모든 클래스의 최고 조상, 오직 11개의 메서드만 가지고 있다.
	 * object clone()에서 ibjest가 메소드 이름이다
	 * class getClass는 클래스의 정보를 담고있는 class를 반환한다
	 * 해쉬코드는 주소를 해시코드로 변환한다
	 * 해쉬코드는 객체를 출력했을떄 @뒤에 나오는 숫자들을 말한다
	 * 투 스트링은 객체의 정보를 문자열로 반환한다
	 * 쓰레드
	 * 노티파이는 쓰레드 하나말 떄운다
	 * 노티파이 올은 모든 쓰레드를 깨운다
	 * 기다리는 쓰레드를 꺠우는것 노티파이
	 * 웨잇은 쓰레드를 기다리도록 하는 것
	 * 
	 * boolean result=obj1.equals(obj2);
	 */
	
	/*hashcode
	 * 해시코드가 같으면 이퀄스는 같다고 나온다
	 * 해시코드는 객체를 식별할 하나의 정수값
	 * 
	 * 이퀄스를 오버라이딩 하면 해시코드도 오버라이딩 해줘야한다
	 * 논리적 동등 객체를 해시코드()가 리턴하는 값도 같아야됨
	 * 즉 두 개의 값이 같은 객체를 생성해서
	 * 이퀄스를 할 경우 트루로 나오지만 
	 * 해시코드는 서로 다르기때문에 이를 맞춰주기 위해 이퀄스를 오버라이딩하면 해시코드를 오버라이딩 해야하는데
	 * 이거는 사용하지 않아서 중요하지 않음
	 */
	
	/*toString
	 * 객쳉의 정보를 문자열로 제공할 목적으로 정의된 메서드인데 16진수의 해시코드를 얻어서 온다
	 * 일반적으로 의미 있는 문자정보가 나오도록 재정의하는것에는
	 * date클래스와 String클래스가 있다
	 * ex)
	 * String str = new String("Kim");
	 * sout(str);
	 * 을 할 경우 주소가 나와야 하지만 미리 재정의를 해두어서 Kim이 출력된다
	 * 
	 * 
	 */
	
	/*colne
	 * 사실 많이 사용하지는 않음
	 * 객체 자신을 복제해서 새로운 객체를 생성하는 메서드
	 * 인스턴스 변수가 참조형일떄 참조하는 객체도 복제되게 오버라이딩해야함
	 * 클론을 사용하려면 cloneable 클래스를 implement해야 쓸 수 있다
	 * 
	 * 
	 * 
	 */
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
